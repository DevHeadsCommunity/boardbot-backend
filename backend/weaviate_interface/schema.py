from weaviate.classes.config import Property, DataType, Tokenization, Configure

SCHEMA = {
    "classes": [
        {
            "class": "RawProductData",
            "description": "Initial raw data for a product",
            "properties": [
                Property(
                    name="product_id",
                    description="The unique identifier of the product",
                    data_type=DataType.TEXT,
                    index_filterable=True,
                    index_searchable=True,
                ),
                Property(
                    name="raw_data",
                    description="The full raw data for the product",
                    data_type=DataType.TEXT,
                    index_filterable=False,
                    index_searchable=True,
                ),
            ],
        },
        {
            "class": "ProductSearchResult",
            "description": "Search results for a product",
            "properties": [
                Property(
                    name="product_id",
                    description="The unique identifier of the product",
                    data_type=DataType.TEXT,
                    index_filterable=True,
                    index_searchable=True,
                ),
                Property(
                    name="search_query",
                    description="The query used for this search",
                    data_type=DataType.TEXT,
                    index_filterable=True,
                    index_searchable=True,
                ),
                Property(
                    name="search_result",
                    description="The full search result",
                    data_type=DataType.TEXT,
                    index_filterable=False,
                    index_searchable=True,
                ),
                Property(
                    name="data_source",
                    description="The source of the search result",
                    data_type=DataType.TEXT,
                    index_filterable=True,
                    index_searchable=True,
                ),
            ],
        },
        {
            "class": "ProductDataChunk",
            "description": "Chunked data for a product",
            "properties": [
                Property(
                    name="chunk_text",
                    description="The text content of the chunk",
                    data_type=DataType.TEXT,
                    index_filterable=False,
                    index_searchable=True,
                ),
                Property(
                    name="product_id",
                    description="The unique identifier of the product",
                    data_type=DataType.TEXT,
                    index_filterable=True,
                    index_searchable=True,
                ),
                Property(
                    name="source_type",
                    description="The type of source this chunk came from (raw_data or search_result)",
                    data_type=DataType.TEXT,
                    index_filterable=True,
                    index_searchable=True,
                ),
                Property(
                    name="source_id",
                    description="The ID of the source (either RawProductData or ProductSearchResult)",
                    data_type=DataType.TEXT,
                    index_filterable=True,
                    index_searchable=True,
                ),
            ],
            "vectorizer_config": Configure.Vectorizer.text2vec_openai(
                model="text-embedding-3-small",
            ),
            "generative_config": Configure.Generative.openai(),
        },
        {
            "class": "Product",
            "description": "A class representing products.",
            "properties": [
                Property(
                    name="name",
                    description="The name of the product.",
                    data_type=DataType.TEXT,
                    index_filterable=True,
                    index_searchable=True,
                    tokenization=Tokenization.WORD,
                ),
                Property(
                    name="ids",
                    description="IDs of the products",
                    data_type=DataType.TEXT,
                    index_filterable=True,
                    index_searchable=True,
                    tokenization=Tokenization.WORD,
                ),
                Property(
                    name="manufacturer",
                    description="The manufacturer of the product.",
                    data_type=DataType.TEXT,
                    index_filterable=True,
                    index_searchable=True,
                    tokenization=Tokenization.WORD,
                ),
                Property(
                    name="form_factor",
                    description="The form of the product.",
                    data_type=DataType.TEXT,
                    index_filterable=True,
                    index_searchable=True,
                    tokenization=Tokenization.WORD,
                ),
                Property(
                    name="processor",
                    description="The processor of the product.",
                    data_type=DataType.TEXT,
                    index_filterable=True,
                    index_searchable=True,
                    tokenization=Tokenization.WORD,
                ),
                Property(
                    name="core_count",
                    description="The core count of the product.",
                    data_type=DataType.TEXT,
                    index_filterable=True,
                    index_searchable=True,
                    tokenization=Tokenization.WORD,
                ),
                Property(
                    name="processor_tdp",
                    description="The processor TDP of the product.",
                    data_type=DataType.TEXT,
                    index_filterable=True,
                    index_searchable=True,
                    tokenization=Tokenization.WORD,
                ),
                Property(
                    name="memory",
                    description="The memory of the product.",
                    data_type=DataType.TEXT,
                    index_filterable=True,
                    index_searchable=True,
                    tokenization=Tokenization.WORD,
                ),
                Property(
                    name="io",
                    description="The IO of the product.",
                    data_type=DataType.TEXT,
                    index_filterable=True,
                    index_searchable=True,
                    tokenization=Tokenization.WORD,
                ),
                Property(
                    name="operating_system",
                    description="The operating system of the product.",
                    data_type=DataType.TEXT,
                    index_filterable=True,
                    index_searchable=True,
                    tokenization=Tokenization.WORD,
                ),
                Property(
                    name="environmentals",
                    description="The environmentals of the product.",
                    data_type=DataType.TEXT,
                    index_filterable=True,
                    index_searchable=True,
                    tokenization=Tokenization.WORD,
                ),
                Property(
                    name="certifications",
                    description="The certifications of the product.",
                    data_type=DataType.TEXT,
                    index_filterable=True,
                    index_searchable=True,
                    tokenization=Tokenization.WORD,
                ),
                Property(
                    name="short_summary",
                    description="The short summary of the product.",
                    data_type=DataType.TEXT,
                    index_filterable=True,
                    index_searchable=True,
                    tokenization=Tokenization.WORD,
                ),
                Property(
                    name="full_summary",
                    description="The full product summary.",
                    data_type=DataType.TEXT,
                    index_filterable=True,
                    index_searchable=True,
                    tokenization=Tokenization.WORD,
                ),
                Property(
                    name="full_product_description",
                    description="The full description of the product.",
                    data_type=DataType.TEXT,
                    index_filterable=True,
                    index_searchable=True,
                    tokenization=Tokenization.WORD,
                ),
            ],
            "vectorizer_config": Configure.Vectorizer.text2vec_openai(
                model="text-embedding-3-small",
            ),
            "generative_config": Configure.Generative.openai(),
        },
        {
            "class": "Route",
            "description": "A class representing a route with multiple descriptive aspects.",
            "properties": [
                Property(
                    name="route",
                    description="The route to follow",
                    data_type=DataType.TEXT,
                    index_filterable=True,
                    index_searchable=True,
                    tokenization=Tokenization.WORD,
                ),
                Property(
                    name="description",
                    description="Route description capturing different aspects of the route",
                    data_type=DataType.TEXT,
                    index_filterable=True,
                    index_searchable=True,
                    tokenization=Tokenization.WORD,
                ),
            ],
            "vectorizer_config": Configure.Vectorizer.text2vec_openai(
                model="text-embedding-3-small",
            ),
            "generative_config": Configure.Generative.openai(),
        },
    ]
}
